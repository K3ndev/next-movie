import { useEffect } from 'react';
import { useRouter } from 'next/router';
import { useQuery } from '@tanstack/react-query';
import Head from 'next/head';
import { Footer, Header } from '@/shared/components';
import Image from 'next/image';

const Pokemon = () => {
  const router = useRouter();
  const { id } = router.query;

  // eslint-disable-next-line consistent-return
  const fetchPokemon = async () => {
    try {
      const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);
      const data = await res.json();

      return data;
    } catch (error) {
      console.error(error);
    }
  };

  const { data, refetch } = useQuery(['pokemon'], fetchPokemon);

  useEffect(() => {
    if (data) {
      if (Number(id) !== Number(data.id)) {
        refetch();
      }
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>Next Pokemon | {data?.name}</title>
      </Head>
      <Header />
      <main className="bg-[#D9D9D9] ">
        <section className="my-3 max-w-7xl mx-auto">
          <h2 className="text-center w-full mb-10 mt-9 text-4xl md:text-5xl">
            {data?.name}
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-5">
            <div className="relative">
              <Image
                src={data?.sprites.other['official-artwork'].front_default}
                alt="pokemon"
                width={300}
                height={300}
                quality={60}
                className="aspect-square w-full scale-75"
              />
            </div>
            <div className="px-5 md:mx-0 flex flex-col w-full h-full md:justify-center gap-10">
              <div className="bg-slate-700 text-white p-6 w-fit rounded-lg">
                {data?.stats.map((stat: any, index: any) => (
                  <div className="flex justify-between gap-7" key={index}>
                    <p className="">{stat.stat.name}:</p>
                    <p>{stat.base_stat}</p>
                  </div>
                ))}
              </div>
              <div className="bg-slate-700 text-white p-6 w-fit rounded-lg">
                <div className="flex gap-2 ">
                  <h3 className="text-cyan-300">abilities: </h3>
                  {data?.abilities.map((item: any, index: any) => (
                    <p key={index}>{item.ability.name}</p>
                  ))}
                </div>
                <div className="flex gap-2 ">
                  <h3 className="text-violet-300">types: </h3>
                  {data?.types.map((item: any, index: any) => (
                    <p key={index}>{item.type.name}</p>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      <Footer />
    </>
  );
};

export default Pokemon;

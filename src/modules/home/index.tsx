import { FormEvent, useState, useEffect } from 'react';
import Head from 'next/head';
import { useIntersection } from '@mantine/hooks';
import useInfiniteFetch from '@/shared/hooks/useInfiniteFetch';
import { Header, Footer, Pokemons } from '../../shared/components/index';
// import FetchPokemon from '../../shared/hooks/FetchPokemon';
import localData from '../../shared/data/pokemon.json';

export default function Home() {
  const { ref: interactionRef, entry } = useIntersection();
  const [searchInput, setSearchInput] = useState<string>('');
  const [isSearching, setIsSearching] = useState(false);
  const [filteredData, setFilteredData] = useState<any>();
  const pokemonsUrl = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=20';
  const { DATA: pokemonsData } = useInfiniteFetch(entry, pokemonsUrl);
  // const [filteredData, setFilteredData] = useState<any>();

  const filterPokemon = (dataPokemon: any, pokemonName: any) => {
    return dataPokemon.results.filter((item: { name: string }) => {
      return item.name.includes(pokemonName.toLowerCase());
    });
  };

  const fetchPokemon = async () => {
    return localData;
  };

  const onSubmitHandler = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setIsSearching(true);

    if (searchInput === '') {
      setIsSearching(false);
    }

    fetchPokemon()
      .then((dataPokemon) => {
        setFilteredData(filterPokemon(dataPokemon, searchInput));
      })
      .catch((error) => {
        console.error(error);
      });

    const url = new URL(window.location.href);
    url.searchParams.set('q', searchInput);
    window.history.pushState({}, '', url);
  };

  useEffect(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const searchParam = urlParams.get('q');

    if (searchParam) {
      setIsSearching(true);
      setSearchInput(searchParam);
      fetchPokemon()
        .then((dataPokemon) => {
          setFilteredData(filterPokemon(dataPokemon, searchParam));
        })
        .catch((error) => {
          console.error(error);
        });
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>Next Pokemon | Home page </title>
      </Head>
      <Header />
      <main className="bg-[#D9D9D9] ">
        <section className="my-3">
          <div className="mb-3 flex justify-center">
            <form
              onSubmit={(e) => {
                onSubmitHandler(e);
              }}
            >
              <input
                type="text"
                placeholder="search"
                className="w-96"
                name="q"
                value={searchInput}
                onChange={(e) => {
                  setSearchInput(e.currentTarget.value);
                }}
              />
            </form>
          </div>

          <div className="mx-auto grid max-w-7xl grid-cols-2 gap-2 md:grid-cols-3 lg:grid-cols-4">
            {!isSearching &&
              pokemonsData?.pages.map((group: any) =>
                group.response.map((pokemon: any) => {
                  return (
                    <div key={pokemon.name}>
                      <Pokemons pokemonURL={pokemon.url} />
                    </div>
                  );
                })
              )}

            {isSearching &&
              filteredData?.map((pokemon: any) => {
                return (
                  <div key={pokemon.name}>
                    <Pokemons pokemonURL={pokemon.url} />
                  </div>
                );
              })}
          </div>
        </section>

        {pokemonsData && !isSearching && (
          <section className="mx-auto max-w-7xl">
            <div className="flex justify-center bg-red-300 ">
              <div ref={interactionRef} className="text-red-900">
                Fetching
              </div>
            </div>
          </section>
        )}
      </main>
      <Footer />
    </>
  );
}

// https://eya-recipes.netlify.app/
